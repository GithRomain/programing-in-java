
Test numOfElems
Initialized queue : []
2Number of elements expected : 0 what we got -> 0
%New Initialized queue : [1,2,3,4,5]
2Number of elements expected : 5 what we got -> 5

Test end


Test peek
Initialized queue : []
fWe are trying to peek an empty queue, what we got -> java.lang.IllegalStateException: Queue is empty
%New Initialized queue : [1,2,3,4,5]
>The last element of the queue should be : 5 what we got -> 5
PVerify that the queue was not changed : what we got -> [1,2,3,4,5] as expected

Test end


Test dequeue
Initialized queue : []
iWe are trying to dequeue an empty queue, what we got -> java.lang.IllegalStateException: Queue is empty
!New initialized queue : [1,2,3]
\Dequeue 3 to the queue : Supposed result : [1,2] what we got -> [1,2] dequeued element : 3
WDequeue 2 to the list : Supposed result : [1] what we got -> [1] dequeued element : 2
TRemoving 1 to the list : Supposed result : [] what we got -> [] dequed element : 1

Test end


Test isEmpty
Initialized queue : []
>Is this queue empty ? : expected : true, what we got -> true
*Now we are adding elemnts to the queue :
Initialized queue : [1,2,3]
@Is this queue empty ? : expected : false, what we got -> false

Test end


Test toString
aInitialized queue, what we expected : [1,2,3], what we got -> : [1,2,3] : The String is correct

Test end


Test enqueue
Initialized queue : []
BAdding 1 to the queue : Supposed result : [1] what we got -> [1]
FAdding 2 to the queue : Supposed result : [1,2] what we got -> [1,2]
JAdding 3 to the queue : Supposed result : [1,2,3] what we got -> [1,2,3]

Test end

